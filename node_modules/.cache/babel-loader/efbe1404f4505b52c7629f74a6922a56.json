{"ast":null,"code":"var _jsxFileName = \"/home/titi/unifork/OrangeSwap/src/components/Header/index.tsx\";\nimport { ChainId } from '@uniswap/sdk';\nimport React from 'react';\nimport { Text } from 'rebass';\nimport { NavLink } from 'react-router-dom'; // import { darken } from 'polished'\n\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport Logo from \"../../assets/svg/logo.svg\";\nimport LogoDark from \"../../assets/svg/logo_white.svg\";\nimport { useActiveWeb3React } from '../../hooks';\nimport { useIsDarkMode } from '../../state/user/hooks';\nimport { useETHBalances } from '../../state/wallet/hooks';\nimport { YellowCard } from '../Card';\nimport Settings from '../Settings';\nimport Row, { RowFixed } from '../Row';\nimport Web3Status from '../Web3Status';\nconst HeaderFrame = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 120px;\n  align-items: center;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n  top: 0;\n  position: relative;\n  padding: 1rem 3rem;\n  z-index: 2;\n  border-bottom: 1px solid ${({\n  theme\n}) => theme.advancedBG};\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    padding: 0 1rem;\n    width: calc(100%);\n    position: relative;\n  `};\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToExtraSmall`\n    padding: 0.5rem 1rem;\n  `}\n`;\nconst HeaderControls = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-self: flex-end;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    flex-direction: row;\n    justify-content: space-between;\n    justify-self: center;\n    width: 100%;\n    max-width: 960px;\n    padding: 1rem;\n    position: fixed;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    z-index: 99;\n    height: 72px;\n    border-radius: 18px 18px 0 0;\n    background-color: ${({\n  theme\n}) => theme.bg1};\n  `};\n`;\nconst HeaderElement = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n   flex-direction: row-reverse;\n    align-items: center;\n  `};\n`;\nconst HeaderElementWrap = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst HeaderRow = styled(RowFixed)`\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n   width: 100%;\n  `};\n`;\nconst HeaderLinks = styled(Row)`\n  justify-content: center;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    padding: 1rem 0 1rem 1rem;\n    justify-content: flex-end;\n\n    @media (max-width: 400px) {\n      padding: 1rem 0;\n      justify-content: space-between;\n    }\n  `};\n`;\nconst AccountElement = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background-color: ${({\n  theme,\n  active\n}) => !active ? theme.bg1 : theme.bg3};\n  border-radius: 12px;\n  white-space: nowrap;\n  width: 100%;\n  cursor: pointer;\n\n  :focus {\n    border: 1px solid blue;\n  }\n`;\nconst HideSmall = styled.span`\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    display: none;  \n  `};\n`;\nconst NetworkCard = styled(YellowCard)`\n  border-radius: 12px;\n  padding: 9px 14px;\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    margin: 0;\n    margin-right: 0.5rem;\n    width: initial;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex-shrink: 1;\n  `};\n`;\nconst BalanceText = styled(Text)`\n  ${({\n  theme\n}) => theme.mediaWidth.upToExtraSmall`\n    display: none;\n  `};\n`;\nconst Title = styled.a`\n  display: flex;\n  align-items: center;\n  pointer-events: auto;\n  justify-self: flex-start;\n  margin-right: 18px;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    justify-self: center;\n  `};\n  :hover {\n    cursor: pointer;\n  }\n\n  @media (max-width: 400px) {\n    display: none;\n  }\n`;\nconst SnakeswapIcon = styled.div`\n  position: relative;\n  bottom: -0.3em;\n  transition: transform 0.3s ease;\n\n  :hover {\n    transform: scale(1.2);\n  }\n`;\nconst activeClassName = 'ACTIVE';\nconst StyledNavLink = styled(NavLink).attrs({\n  activeClassName\n})`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: left;\n  border-radius: 3rem;\n  outline: none;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${({\n  theme\n}) => theme.text3};\n  font-size: 1.3rem;\n  width: fit-content;\n  margin: 0 12px;\n  font-weight: 500;\n  transition: 0.3s ease;\n\n  :hover,\n  :focus,\n  &.${activeClassName} {\n    color: ${({\n  theme\n}) => theme.text1};\n  }\n`; // const RedirectLink = styled.a`\n//   ${({ theme }) => theme.flexRowNoWrap}\n//   align-items: left;\n//   outline: none;\n//   cursor: pointer;\n//   text-decoration: none;\n//   white-space: nowrap;\n//   color: ${({ theme }) => theme.text3};\n//   font-size: 1.3rem;\n//   width: fit-content;\n//   margin: 0 12px;\n//   font-weight: 500;\n//   transition: 0.3s ease;\n//   &.${activeClassName} {\n//     font-weight: 600;\n//     color: ${({ theme }) => theme.text1};\n//   }\n//   :focus,\n//   :hover {\n//     text-decoration: underline;\n//     color: ${({ theme }) => darken(0.1, theme.text1)};\n//   }\n// `\n\nconst NETWORK_LABELS = {\n  [ChainId.RINKEBY]: 'Rinkeby',\n  [ChainId.ROPSTEN]: 'Ropsten',\n  [ChainId.GÖRLI]: 'Görli',\n  [ChainId.KOVAN]: 'Kovan'\n};\nexport default function Header() {\n  var _useETHBalances;\n\n  const darkMode = useIsDarkMode();\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const userEthBalance = (_useETHBalances = useETHBalances(account ? [account] : [])) === null || _useETHBalances === void 0 ? void 0 : _useETHBalances[account !== null && account !== void 0 ? account : ''];\n  return /*#__PURE__*/React.createElement(HeaderFrame, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HeaderRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    href: \".\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SnakeswapIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: '36px',\n    src: darkMode ? LogoDark : Logo,\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(HeaderLinks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledNavLink, {\n    id: `swap-nav-link`,\n    to: '/swap',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, t('swap')), /*#__PURE__*/React.createElement(StyledNavLink, {\n    id: `pool-nav-link`,\n    to: '/pool',\n    isActive: (match, {\n      pathname\n    }) => Boolean(match) || pathname.startsWith('/add') || pathname.startsWith('/remove') || pathname.startsWith('/create') || pathname.startsWith('/find'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, t('pool')))), /*#__PURE__*/React.createElement(HeaderControls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HideSmall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, chainId && NETWORK_LABELS[chainId] && /*#__PURE__*/React.createElement(NetworkCard, {\n    title: NETWORK_LABELS[chainId],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, NETWORK_LABELS[chainId])), /*#__PURE__*/React.createElement(AccountElement, {\n    active: !!account,\n    style: {\n      pointerEvents: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, account && userEthBalance ? /*#__PURE__*/React.createElement(BalanceText, {\n    style: {\n      flexShrink: 0\n    },\n    pl: \"0.75rem\",\n    pr: \"0.5rem\",\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, userEthBalance === null || userEthBalance === void 0 ? void 0 : userEthBalance.toSignificant(4), \" ETH\") : null, /*#__PURE__*/React.createElement(Web3Status, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(HeaderElementWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/titi/unifork/OrangeSwap/src/components/Header/index.tsx"],"names":["ChainId","React","Text","NavLink","useTranslation","styled","useActiveWeb3React","useIsDarkMode","useETHBalances","YellowCard","Settings","Row","RowFixed","Web3Status","HeaderFrame","div","theme","advancedBG","mediaWidth","upToMedium","upToExtraSmall","HeaderControls","bg1","HeaderElement","HeaderElementWrap","HeaderRow","HeaderLinks","AccountElement","active","bg3","HideSmall","span","upToSmall","NetworkCard","BalanceText","Title","a","SnakeswapIcon","activeClassName","StyledNavLink","attrs","flexRowNoWrap","text3","text1","NETWORK_LABELS","RINKEBY","ROPSTEN","GÖRLI","KOVAN","Header","darkMode","account","chainId","t","userEthBalance","LogoDark","Logo","match","pathname","Boolean","startsWith","pointerEvents","flexShrink","toSignificant"],"mappings":"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","sourcesContent":["import { ChainId } from '@uniswap/sdk'\nimport React from 'react'\nimport { Text } from 'rebass'\nimport { NavLink } from 'react-router-dom'\n// import { darken } from 'polished'\nimport { useTranslation } from 'react-i18next'\n\nimport styled from 'styled-components'\n\nimport Logo from '../../assets/svg/logo.svg'\nimport LogoDark from '../../assets/svg/logo_white.svg'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useIsDarkMode } from '../../state/user/hooks'\nimport { useETHBalances } from '../../state/wallet/hooks'\nimport { YellowCard } from '../Card'\nimport Settings from '../Settings'\nimport Row, { RowFixed } from '../Row'\nimport Web3Status from '../Web3Status'\n\nconst HeaderFrame = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 120px;\n  align-items: center;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n  top: 0;\n  position: relative;\n  padding: 1rem 3rem;\n  z-index: 2;\n  border-bottom: 1px solid ${({ theme }) => theme.advancedBG};\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    padding: 0 1rem;\n    width: calc(100%);\n    position: relative;\n  `};\n\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    padding: 0.5rem 1rem;\n  `}\n`\n\nconst HeaderControls = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-self: flex-end;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    flex-direction: row;\n    justify-content: space-between;\n    justify-self: center;\n    width: 100%;\n    max-width: 960px;\n    padding: 1rem;\n    position: fixed;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    z-index: 99;\n    height: 72px;\n    border-radius: 18px 18px 0 0;\n    background-color: ${({ theme }) => theme.bg1};\n  `};\n`\n\nconst HeaderElement = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n   flex-direction: row-reverse;\n    align-items: center;\n  `};\n`\n\nconst HeaderElementWrap = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst HeaderRow = styled(RowFixed)`\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n   width: 100%;\n  `};\n`\n\nconst HeaderLinks = styled(Row)`\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem 0 1rem 1rem;\n    justify-content: flex-end;\n\n    @media (max-width: 400px) {\n      padding: 1rem 0;\n      justify-content: space-between;\n    }\n  `};\n`\n\nconst AccountElement = styled.div<{ active: boolean }>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background-color: ${({ theme, active }) => (!active ? theme.bg1 : theme.bg3)};\n  border-radius: 12px;\n  white-space: nowrap;\n  width: 100%;\n  cursor: pointer;\n\n  :focus {\n    border: 1px solid blue;\n  }\n`\n\nconst HideSmall = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;  \n  `};\n`\n\nconst NetworkCard = styled(YellowCard)`\n  border-radius: 12px;\n  padding: 9px 14px;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    margin: 0;\n    margin-right: 0.5rem;\n    width: initial;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex-shrink: 1;\n  `};\n`\n\nconst BalanceText = styled(Text)`\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    display: none;\n  `};\n`\n\nconst Title = styled.a`\n  display: flex;\n  align-items: center;\n  pointer-events: auto;\n  justify-self: flex-start;\n  margin-right: 18px;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    justify-self: center;\n  `};\n  :hover {\n    cursor: pointer;\n  }\n\n  @media (max-width: 400px) {\n    display: none;\n  }\n`\n\nconst SnakeswapIcon = styled.div`\n  position: relative;\n  bottom: -0.3em;\n  transition: transform 0.3s ease;\n\n  :hover {\n    transform: scale(1.2);\n  }\n`\n\nconst activeClassName = 'ACTIVE'\n\nconst StyledNavLink = styled(NavLink).attrs({\n  activeClassName\n})`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: left;\n  border-radius: 3rem;\n  outline: none;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${({ theme }) => theme.text3};\n  font-size: 1.3rem;\n  width: fit-content;\n  margin: 0 12px;\n  font-weight: 500;\n  transition: 0.3s ease;\n\n  :hover,\n  :focus,\n  &.${activeClassName} {\n    color: ${({ theme }) => theme.text1};\n  }\n`\n\n// const RedirectLink = styled.a`\n//   ${({ theme }) => theme.flexRowNoWrap}\n//   align-items: left;\n//   outline: none;\n//   cursor: pointer;\n//   text-decoration: none;\n//   white-space: nowrap;\n//   color: ${({ theme }) => theme.text3};\n//   font-size: 1.3rem;\n//   width: fit-content;\n//   margin: 0 12px;\n//   font-weight: 500;\n//   transition: 0.3s ease;\n\n//   &.${activeClassName} {\n//     font-weight: 600;\n//     color: ${({ theme }) => theme.text1};\n//   }\n\n//   :focus,\n//   :hover {\n//     text-decoration: underline;\n//     color: ${({ theme }) => darken(0.1, theme.text1)};\n//   }\n// `\n\nconst NETWORK_LABELS: { [chainId in ChainId]?: string } = {\n  [ChainId.RINKEBY]: 'Rinkeby',\n  [ChainId.ROPSTEN]: 'Ropsten',\n  [ChainId.GÖRLI]: 'Görli',\n  [ChainId.KOVAN]: 'Kovan'\n}\n\nexport default function Header() {\n  const darkMode = useIsDarkMode()\n  const { account, chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const userEthBalance = useETHBalances(account ? [account] : [])?.[account ?? '']\n\n  return (\n    <HeaderFrame>\n      <HeaderRow>\n        <Title href=\".\">\n          <SnakeswapIcon>\n            <img width={'36px'} src={darkMode ? LogoDark : Logo} alt=\"logo\" />\n          </SnakeswapIcon>\n        </Title>\n\n        <HeaderLinks>\n          <StyledNavLink id={`swap-nav-link`} to={'/swap'}>\n            {t('swap')}\n          </StyledNavLink>\n\n          <StyledNavLink\n            id={`pool-nav-link`}\n            to={'/pool'}\n            isActive={(match, { pathname }) =>\n              Boolean(match) ||\n              pathname.startsWith('/add') ||\n              pathname.startsWith('/remove') ||\n              pathname.startsWith('/create') ||\n              pathname.startsWith('/find')\n            }\n          >\n            {t('pool')}\n          </StyledNavLink>\n\n          {/* <RedirectLink href={'https://info.snakeswap.org/'} target=\"_blank\">\n            {t('analytics')}\n          </RedirectLink> */}\n        </HeaderLinks>\n      </HeaderRow>\n\n      <HeaderControls>\n        <HeaderElement>\n          <HideSmall>\n            {chainId && NETWORK_LABELS[chainId] && (\n              <NetworkCard title={NETWORK_LABELS[chainId]}>{NETWORK_LABELS[chainId]}</NetworkCard>\n            )}\n          </HideSmall>\n          <AccountElement active={!!account} style={{ pointerEvents: 'auto' }}>\n            {account && userEthBalance ? (\n              <BalanceText style={{ flexShrink: 0 }} pl=\"0.75rem\" pr=\"0.5rem\" fontWeight={500}>\n                {userEthBalance?.toSignificant(4)} ETH\n              </BalanceText>\n            ) : null}\n            <Web3Status />\n          </AccountElement>\n        </HeaderElement>\n        <HeaderElementWrap>\n          <Settings />\n        </HeaderElementWrap>\n      </HeaderControls>\n    </HeaderFrame>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}